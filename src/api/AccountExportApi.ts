/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.80
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.12
 *
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * AccountExport service.
 * @module api/AccountExportApi
 */


class AccountExportApi {
  apiClient: ApiClient;

  constructor(apiClient?: ApiClient) {
    this.apiClient = apiClient || ApiClient.instance;
  }

  /**
   * Get account export info
   * Get information about a specific account export.
   * @param {string} exportId The unique id for the account export.
   * @param {GetAccountExportsOptions} opts Optional parameters
   * @return {Promise<any>} a Promise, with an object containing data of type InlineResponse2001Exports and HTTP response
   */
  async getAccountExportsWithHttpInfo(exportId: string, opts: GetAccountExportsOptions = {}): Promise<any> {
    if (exportId === undefined || exportId === null) {
      throw new Error("Missing the required parameter 'exportId' when calling getAccountExportsWithHttpInfo");
    }

    const pathParams = {
      'export_id': exportId
    };

    const queryParams = {
      'fields': this.apiClient.buildCollectionParam(opts.fields || opts.fields, 'csv'),
      'exclude_fields': this.apiClient.buildCollectionParam(opts.excludeFields || opts.excludeFields, 'csv')
    };

    const headerParams = {};
    const formParams = {};
    const authNames = ['basicAuth'];
    const contentTypes = ['application/json'];
    const accepts = ['application/json', 'application/problem+json'];
    const returnType = 'application/json';

    return this.apiClient.callApi(
      '/account-exports/{export_id}', 'GET',
      pathParams, queryParams, headerParams, formParams, null,
      authNames, contentTypes, accepts, returnType
    );
  }

  /**
   * Get account export info
   * Get information about a specific account export.
   * @param {string} exportId The unique id for the account export.
   * @param {GetAccountExportsOptions} opts Optional parameters
   * @return {Promise<any>} a Promise, with data of type InlineResponse2001Exports
   */
  async getAccountExports(exportId: string, opts: GetAccountExportsOptions = {}): Promise<any> {
    const response_and_data = await this.getAccountExportsWithHttpInfo(exportId, opts);
    return response_and_data.data;
  }
}

export default AccountExportApi;
